# Generated by Django 4.2.7 on 2025-10-25 18:41

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('biography', models.TextField(blank=True, verbose_name='Биография')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Страна')),
            ],
            options={
                'verbose_name': 'Автор',
                'verbose_name_plural': 'Авторы',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('isbn', models.CharField(max_length=13, unique=True, verbose_name='ISBN')),
                ('publication_year', models.PositiveIntegerField(verbose_name='Год издания')),
                ('pages', models.PositiveIntegerField(blank=True, null=True, verbose_name='Количество страниц')),
                ('language', models.CharField(choices=[('ru', 'Русский'), ('en', 'Английский'), ('fr', 'Французский'), ('de', 'Немецкий'), ('es', 'Испанский'), ('other', 'Другой')], default='ru', max_length=10, verbose_name='Язык')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='book_covers/', verbose_name='Обложка')),
                ('total_copies', models.PositiveIntegerField(default=1, verbose_name='Всего экземпляров')),
                ('available_copies', models.PositiveIntegerField(default=1, verbose_name='Доступно экземпляров')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='library.author', verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Книга',
                'verbose_name_plural': 'Книги',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название')),
                ('country', models.CharField(max_length=100, verbose_name='Страна')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('foundation_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='Год основания')),
                ('website', models.URLField(blank=True, verbose_name='Веб-сайт')),
            ],
            options={
                'verbose_name': 'Издательство',
                'verbose_name_plural': 'Издательства',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Reader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=50, verbose_name='Фамилия')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('address', models.TextField(blank=True, verbose_name='Адрес')),
                ('passport_number', models.CharField(max_length=20, unique=True, verbose_name='Номер паспорта')),
                ('registration_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата регистрации')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Читатель',
                'verbose_name_plural': 'Читатели',
                'ordering': ['-registration_date'],
            },
        ),
        migrations.CreateModel(
            name='Borrowing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('borrow_date', models.DateField(default=datetime.date.today, verbose_name='Дата выдачи')),
                ('due_date', models.DateField(verbose_name='Планируемая дата возврата')),
                ('return_date', models.DateField(blank=True, null=True, verbose_name='Фактическая дата возврата')),
                ('status', models.CharField(choices=[('active', 'Активна'), ('returned', 'Возвращена'), ('overdue', 'Просрочена')], default='active', max_length=10, verbose_name='Статус')),
                ('fine_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Сумма штрафа')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrowings', to='library.book', verbose_name='Книга')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='borrowings', to='library.reader', verbose_name='Читатель')),
            ],
            options={
                'verbose_name': 'Выдача книги',
                'verbose_name_plural': 'Выдачи книг',
                'ordering': ['-borrow_date'],
            },
        ),
        migrations.AddField(
            model_name='book',
            name='genres',
            field=models.ManyToManyField(related_name='books', to='library.genre', verbose_name='Жанры'),
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='library.publisher', verbose_name='Издательство'),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Оценка')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='library.book', verbose_name='Книга')),
                ('reader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='library.reader', verbose_name='Читатель')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
                'unique_together': {('reader', 'book')},
            },
        ),
    ]
